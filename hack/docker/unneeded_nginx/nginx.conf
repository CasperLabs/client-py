master_process off;
worker_processes 1;
pid nginx.pid;
error_log /dev/stderr;

events {
  worker_connections 1024;
}

# Here's an example of proxying to gRPC services, but it doesn't seem to work with the grpcwebproxy:
# https://www.nginx.com/blog/deploying-nginx-plus-as-an-api-gateway-part-3-publishing-grpc-services/
# https://github.com/grpc/grpc-web/blob/master/net/grpc/gateway/examples/echo/nginx.conf suggests that
# the `grpc_pass` should work at least with the google version.

http {
  access_log /dev/stdout;
  client_max_body_size 0;
  client_body_temp_path client_body_temp;
  proxy_temp_path proxy_temp;
  proxy_request_buffering off;
  proxy_buffering off;

  server {
    listen 8443 ssl;
    server_name localhost;

    ssl_certificate      /etc/nginx/tls/certificate.pem;
    ssl_certificate_key  /etc/nginx/tls/key.pem;

    location /io.casperlabs.node.api.casper.CasperService {
      # Any of the following work:
      #proxy_pass http://grpcwebproxy:8080;
      #proxy_pass https://grpcwebproxy:8443;
      grpc_pass grpcs://grpcwebproxy:8443;

      # But not this:
      #grpc_pass grpc://grpcwebproxy:8080;

      # The maximum timeout for server-side streaming,
      # nginx will close connection once timeout.
      # https://nginx.org/en/docs/http/ngx_http_grpc_module.html#grpc_read_timeout
      grpc_read_timeout 1h;
    }

    location /io.casperlabs.node.api.diagnostics.Diagnostics {
      grpc_pass grpcs://grpcwebproxy:8443;
    }

    location / {
      proxy_pass http://explorer:8080;
    }
  }
}
